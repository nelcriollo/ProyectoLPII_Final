package log.ministerio.controlador;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.jasper.tagplugins.jstl.core.ForEach;

import log.ministerio.entidad.Acceso;
import log.ministerio.entidad.Menu;
import log.ministerio.entidad.Usuario;
import log.ministerio.services.AccesoService;
import log.ministerio.services.MenuService;
import log.ministerio.services.UsuarioService;



@WebServlet("/ServletUsuario")
public class ServletUsuario extends HttpServlet {
	private static final long serialVersionUID = 1L;

	private UsuarioService servicioUser = new UsuarioService();
	private MenuService servicioMenu = new MenuService();
	private AccesoService servicioAcceso = new AccesoService();


	public ServletUsuario() {
		super();

	}


	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String accion;
		accion=request.getParameter("tipo");
		if(accion.equals("INICIAR")) 
			iniciarSessionDelUsuario(request,response);
		else if(accion.equals("CERRAR")) 
			cerrarSessionDelUsuario(request,response);
	}


	private void cerrarSessionDelUsuario(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//recuperar la session actual
		HttpSession session=request.getSession();
		//invalidad la session "destruir todos los atributos de tipo session con el método invalidate()"
		session.invalidate();

		request.setAttribute("MENSAJE", "Sessión terminada");
		request.getRequestDispatcher("/login.jsp").forward(request, response);

	}


	private void iniciarSessionDelUsuario(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		String loginUser,passwordUsuer,codigoMenu;
		loginUser=request.getParameter("usuario");
		passwordUsuer=request.getParameter("clave");
		//codigoMenu=request.getParameter("codMenusenu");

		Usuario bean = servicioUser.iniciarSession(loginUser, passwordUsuer);


		if(bean==null) {
			request.setAttribute("MENSAJE", "Usuario y/o Clave incorrectos");
			request.getRequestDispatcher("/login.jsp").forward(request, response);
		}
		else {

			List<Acceso> Menus=servicioAcceso.ListarMenusPor_Usuario(bean.getCod_usuario());
			System.out.println(""+Menus.get(0).getCod_menu());

			//List<Menu> OpcionesMenu=servicioMenu.ListarOpcionesDelMenuPorUsuario(bean.getCod_usuario(),Menus.get(0).getCod_menu());
			//System.out.println(""+OpcionesMenu.get(0).getCod_menu());
			List<Menu> OpcionesMenu = new  ArrayList<Menu>();
			
		
			
			for (int i = 0; i < Menus.size(); i++) {
				System.out.println("CODIGO DEL MENU"+ Menus.get(i).getCod_menu()+ Menus.get(i).getDes_menu());
				List<Menu> opcionesmen=servicioMenu.ListarOpcionesDelMenuPorUsuario(bean.getCod_usuario(),Menus.get(i).getCod_menu());
				
				//System.out.println("menus"+ OpcionesMenu.get(i).getDes_rolmenu());
				//System.out.println("menus"+ OpcionesMenu.add(opcionesmen));	
				System.out.println("menus"+(OpcionesMenu=opcionesmen));
				
			}
			
			/*System.out.println("n... Contenido de los ArrayList del ArrayList ...");
			Iterator<Acceso> nroMenus = Menus.iterator();
			while(nroMenus.hasNext()){
				
				List<Menu> opcionesmen=servicioMenu.ListarOpcionesDelMenuPorUsuario(bean.getCod_usuario(),Menus.get(nroMenus.hashCode()).getCod_menu());
				Iterator<Integer> itrNumeros = numeros.iterator();
				while(itrNumeros.hasNext()){
					int numero = itrNumeros.next();
					System.out.print(numero+" ");
				}
				System.out.println();
			}*/
			//System.out.println("menus"+ OpcionesMenu);
			

			HttpSession session=request.getSession();
			session.setAttribute("LISTAMenu", Menus);
			session.setAttribute("LISTAOpciones", OpcionesMenu);
			request.getRequestDispatcher("/menuprincipal.jsp").forward(request, response);

		}
	}

}
